#FS

TODO:


- create dedicated functions for stats (increment)

- remove stdint from operations.h // improve _search speed

- add universal file exclusion

- how to return results generally, add static global stats ? stats for each op ?

- use and check for limitations like "OPENMAX" limits.h

- add failure checks!!!  (malloc returns NULL failure, check: fopen, opendir, readdir)

- add commandline arguments / functionality
        - use arguments
        - how to have multiple arguments for exclusion
        - control spaces with quotes implicitly
        - add option to ignore duplicate files names ?

        fs options:
            - replace a term with another term in all files (w/ options about capturing as above)
            - provide options to restrict files searched
0
- apply checks for cmd arguments (min_len search term -> 1)

- what to do with simlinks

- separate code more 


----------------------------------------------------------------------

!!!!!! - starting directory itself is not counted in searchStats
!!!!!! - function getFileType() from stackoverflow (https://stackoverflow.com/questions/56212434/how-to-know-a-files-type)
!!!!!! - TERMINOLOGY: file or stream is mostly called 'item' in this program
!!!!!! - filenames "." and ".." are ignored in recursive(...) by default

----------------------------------------------------------------------

nice to have:

- check using valgrind
- https://github.com/bji/libs3 - use this for amazon S3
- enable user to create backups of folders 
- centralize exclusion file
- create fs.macro to define user macros


materials:
https://pubs.opengroup.org/onlinepubs/7908799/xsh/dirent.h.html


1) find all occurences of a snippet of text in all files in current folder and all files contained in all folders contained in the main current folder recursively,
   display the results nicely

- interpret command 
- index all ascii files 
- parse all files for search parameter 
- save information for successful searches 
- output search results [summary, stats, nothing]
